
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

server {
       listen       8081;  # Измените порт на 8081
       server_name  localhost;

       # Обработка запросов к /signin
       location /signin {
           root   C:/Users/arosl/Desktop/nginx-1.26.3/html;  # Укажите путь к директории с вашим HTML-файлом
           index  signin.html;                             # Имя вашего HTML-файла
           try_files $uri $uri/ /signin.html =404;      # Проверяем наличие файла
       }

       # Прокси для других запросов на Spring Boot приложение
       location / {
           proxy_pass http://localhost:8080;  # Указываем порт вашего Spring Boot приложения
           proxy_set_header Host $host;
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header X-Forwarded-Proto $scheme;
       }

       # Обработка ошибок
       error_page   500 502 503 504  /50x.html;
       location = /50x.html {
           root   C:/Users/arosl/Desktop/nginx-1.26.3/html;  # Для обработки ошибок
       }
   }
    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
